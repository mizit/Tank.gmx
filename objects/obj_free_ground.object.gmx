<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 1;
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i = 0; i &lt; instance_number(obj_pillar); i++)
{
    pillars[i] = instance_find(obj_pillar, i);
}
for (var i = 0; i &lt; instance_number(obj_pillar); i++)
{
    var test = 0;
    for (var j = 0; j &lt; (instance_number(obj_pillar) - 1); j++)
    {
        if (pillars[j].x &gt; pillars[j + 1].x)
        {
            var tmp = pillars[j];
            pillars[j] = pillars[j + 1];
            pillars[j + 1] = tmp;
            test = 1;
        }
    }
    if (test == 0)
    {
        break;
    }
}

//fixtures = ds_list_create();
for (var i = 0; i &lt; (instance_number(obj_pillar) - 1); i++)
{
    var fixture = physics_fixture_create();
    physics_fixture_set_polygon_shape(fixture);
    physics_fixture_add_point(fixture, pillars[i].x, pillars[i].y);
    physics_fixture_add_point(fixture, pillars[i + 1].x, pillars[i + 1].y);
    physics_fixture_add_point(fixture, pillars[i + 1].x, room_height);
    physics_fixture_add_point(fixture, pillars[i].x, room_height);
    physics_fixture_set_collision_group(fixture, 1);
    physics_fixture_set_density(fixture, 0);
    physics_fixture_bind(fixture, id);
}

ready = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//shader_set(shd_ground);
draw_set_colour(make_colour_rgb(118, 93, 66));
for (var i = 0; i &lt; instance_number(obj_pillar) - 1; i++)
{
    draw_primitive_begin(pr_trianglefan);
    draw_vertex(pillars[i].x, pillars[i].y);
    draw_vertex(pillars[i + 1].x, pillars[i + 1].y);
    draw_vertex(pillars[i + 1].x, room_height);
    draw_vertex(pillars[i].x, room_height);
    draw_primitive_end();
}
//shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
